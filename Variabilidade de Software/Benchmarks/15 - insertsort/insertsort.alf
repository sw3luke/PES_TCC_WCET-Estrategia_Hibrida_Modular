{ alf
 { macro_defs }
 { least_addr_unit 8 }
 little_endian
 { exports
  { frefs
   { fref 64 "a" }
  }
  { lrefs { lref 64 "insertsort" } { lref 64 "main" } }
 }
 { imports
  { frefs
   { fref 64 "$null" }
   { fref 64 "$mem" }
  }
  { lrefs }
 }
 { decls
  { alloc 64 "a" 352 }
 }
 { inits
  { init { ref "a" { dec_unsigned 64 0 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 4 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 8 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 12 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 16 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 20 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 24 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 28 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 32 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 36 } } { dec_unsigned 32 0 } }
  { init { ref "a" { dec_unsigned 64 40 } } { dec_unsigned 32 0 } }
 }
 { funcs

  /* Definition of function insertsort */
  { func
   { label 64 { lref 64 "insertsort" } { dec_unsigned 64 0 } }
   { arg_decls }
   { scope
    { decls
     { alloc 64 "%i.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%j.0" 32 } /* Local Variable (PHI node) */ 
     { alloc 64 "%tmp6" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp10" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp15" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp19" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp25" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
     { alloc 64 "%tmp27" 32 } /* Local Variable (Non-Inlinable Instruction) */ 
    }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
     { label 64 { lref 64 "insertsort::bb" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb::1
      *   br label %bb1, !dbg !23 */
     { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { dec_unsigned 32 2 } }

     /* --------- BASIC BLOCK bb1 ---------- */
     { label 64 { lref 64 "insertsort::bb1" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb1::2
      *   %tmp = icmp slt i32 %i.0, 11, !dbg !23
      *   br i1 %tmp, label %bb2, label %bb28, !dbg !23 */
     { switch
      { s_lt 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 11 } }
      { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "insertsort::bb2" } { dec_unsigned 64 0 } } }
      { default { label 64 { lref 64 "insertsort::bb28" } { dec_unsigned 64 0 } } }
     }

     /* --------- BASIC BLOCK bb2 ---------- */
     { label 64 { lref 64 "insertsort::bb2" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb2::1
      *   br label %bb3, !dbg !27 */
     { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } }

     /* --------- BASIC BLOCK bb3 ---------- */
     { label 64 { lref 64 "insertsort::bb3" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb3::3
      *   %tmp4 = sext i32 %j.0 to i64, !dbg !27
      *   %tmp5 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp4, !dbg !27
      *   %tmp6 = load i32* %tmp5, align 4, !dbg !27 */
     { store { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } with
      { load 32
       { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 4 }
         }
        }
        { dec_unsigned 1 0 }
       }
      }
     }

     /* STATEMENT insertsort::bb3::7
      *   %tmp7 = add nsw i32 %j.0, -1, !dbg !27
      *   %tmp8 = sext i32 %tmp7 to i64, !dbg !27
      *   %tmp9 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp8, !dbg !27
      *   %tmp10 = load i32* %tmp9, align 4, !dbg !27 */
     { label 64 { lref 64 "insertsort::bb3::7" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "%tmp10" } { dec_unsigned 64 0 } } with
      { load 32
       { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64
           { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
          }
          { dec_unsigned 64 4 }
         }
        }
        { dec_unsigned 1 0 }
       }
      }
     }

     /* STATEMENT insertsort::bb3::9
      *   %tmp11 = icmp slt i32 %tmp6, %tmp10, !dbg !27
      *   br i1 %tmp11, label %bb12, label %bb26, !dbg !27 */
     { label 64 { lref 64 "insertsort::bb3::9" } { dec_unsigned 64 0 } }
     { switch
      { s_lt 32 { load 32 { addr 64 { fref 64 "%tmp6" } { dec_unsigned 64 0 } } } { load 32 { addr 64 { fref 64 "%tmp10" } { dec_unsigned 64 0 } } } }
      { target { dec_signed 1 { minus 1 } } { label 64 { lref 64 "insertsort::bb12" } { dec_unsigned 64 0 } } }
      { default { label 64 { lref 64 "insertsort::bb26" } { dec_unsigned 64 0 } } }
     }

     /* --------- BASIC BLOCK bb12 ---------- */
     { label 64 { lref 64 "insertsort::bb12" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb12::2
      *   %tmp13 = sext i32 %j.0 to i64, !dbg !28
      *   %tmp14 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp13, !dbg !28
      *   %tmp15 = load i32* %tmp14, align 4, !dbg !28 */
     { store { addr 64 { fref 64 "%tmp15" } { dec_unsigned 64 0 } } with
      { load 32
       { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
          { dec_unsigned 64 4 }
         }
        }
        { dec_unsigned 1 0 }
       }
      }
     }

     /* STATEMENT insertsort::bb12::7
      *   %tmp16 = add nsw i32 %j.0, -1, !dbg !31
      *   %tmp17 = sext i32 %tmp16 to i64, !dbg !31
      *   %tmp18 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp17, !dbg !31
      *   %tmp19 = load i32* %tmp18, align 4, !dbg !31 */
     { label 64 { lref 64 "insertsort::bb12::7" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "%tmp19" } { dec_unsigned 64 0 } } with
      { load 32
       { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
        { select 128 0 63
         { u_mul 64 64
          { s_ext 32 64
           { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
          }
          { dec_unsigned 64 4 }
         }
        }
        { dec_unsigned 1 0 }
       }
      }
     }

     /* STATEMENT insertsort::bb12::10
      *   %tmp20 = sext i32 %j.0 to i64, !dbg !31
      *   %tmp21 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp20, !dbg !31
      *   store i32 %tmp19, i32* %tmp21, align 4, !dbg !31 */
     { label 64 { lref 64 "insertsort::bb12::10" } { dec_unsigned 64 0 } }
     { store
      { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
       { select 128 0 63
        { u_mul 64 64
         { s_ext 32 64 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } }
         { dec_unsigned 64 4 }
        }
       }
       { dec_unsigned 1 0 }
      }
      with
      { load 32 { addr 64 { fref 64 "%tmp19" } { dec_unsigned 64 0 } } }
     }

     /* STATEMENT insertsort::bb12::14
      *   %tmp22 = add nsw i32 %j.0, -1, !dbg !32
      *   %tmp23 = sext i32 %tmp22 to i64, !dbg !32
      *   %tmp24 = getelementptr inbounds [11 x i32]* @a, i64 0, i64 %tmp23, !dbg !32
      *   store i32 %tmp15, i32* %tmp24, align 4, !dbg !32 */
     { label 64 { lref 64 "insertsort::bb12::14" } { dec_unsigned 64 0 } }
     { store
      { add 64 { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } }
       { select 128 0 63
        { u_mul 64 64
         { s_ext 32 64
          { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
         }
         { dec_unsigned 64 4 }
        }
       }
       { dec_unsigned 1 0 }
      }
      with
      { load 32 { addr 64 { fref 64 "%tmp15" } { dec_unsigned 64 0 } } }
     }

     /* STATEMENT insertsort::bb12::15
      *   %tmp25 = add nsw i32 %j.0, -1, !dbg !33 */
     { label 64 { lref 64 "insertsort::bb12::15" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "%tmp25" } { dec_unsigned 64 0 } } with
      { add 32 { load 32 { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } } { dec_signed 32 { minus 1 } } { dec_unsigned 1 0 } }
     }

     /* STATEMENT insertsort::bb12::17
      *   br label %bb3, !dbg !34 */
     { label 64 { lref 64 "insertsort::bb12::17" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "%j.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp25" } { dec_unsigned 64 0 } } } }

     { label 64 { lref 64 "insertsort::bb12::17:::1" } { dec_unsigned 64 0 } }
     { jump { label 64 { lref 64 "insertsort::bb3" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb26 ---------- */
     { label 64 { lref 64 "insertsort::bb26" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb26::0
      *   %tmp27 = add nsw i32 %i.0, 1, !dbg !35 */
     { store { addr 64 { fref 64 "%tmp27" } { dec_unsigned 64 0 } } with
      { add 32 { load 32 { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } } { dec_unsigned 32 1 } { dec_unsigned 1 0 } }
     }

     /* STATEMENT insertsort::bb26::2
      *   br label %bb1, !dbg !36 */
     { label 64 { lref 64 "insertsort::bb26::2" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "%i.0" } { dec_unsigned 64 0 } } with { load 32 { addr 64 { fref 64 "%tmp27" } { dec_unsigned 64 0 } } } }

     { label 64 { lref 64 "insertsort::bb26::2:::1" } { dec_unsigned 64 0 } }
     { jump { label 64 { lref 64 "insertsort::bb1" } { dec_unsigned 64 0 } } leaving 0 }

     /* --------- BASIC BLOCK bb28 ---------- */
     { label 64 { lref 64 "insertsort::bb28" } { dec_unsigned 64 0 } }

     /* STATEMENT insertsort::bb28::0
      *   ret void, !dbg !37 */
     { return }
    }
   }
  }

  /* Definition of function main */
  { func
   { label 64 { lref 64 "main" } { dec_unsigned 64 0 } }
   { arg_decls }
   { scope
    { decls }
    { inits }
    { stmts

     /* --------- BASIC BLOCK bb ---------- */
     { label 64 { lref 64 "main::bb" } { dec_unsigned 64 0 } }

     /* STATEMENT main::bb::0
      *   store i32 0, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 0), align 16, !dbg !20 */
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 0 } } with { dec_unsigned 32 0 } }

     /* STATEMENT main::bb::1
      *   store i32 11, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 1), align 4, !dbg !21 */
     { label 64 { lref 64 "main::bb::1" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 4 } } with { dec_unsigned 32 11 } }

     /* STATEMENT main::bb::2
      *   store i32 10, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 2), align 8, !dbg !22 */
     { label 64 { lref 64 "main::bb::2" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 8 } } with { dec_unsigned 32 10 } }

     /* STATEMENT main::bb::3
      *   store i32 9, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 3), align 4, !dbg !23 */
     { label 64 { lref 64 "main::bb::3" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 12 } } with { dec_unsigned 32 9 } }

     /* STATEMENT main::bb::4
      *   store i32 8, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 4), align 16, !dbg !24 */
     { label 64 { lref 64 "main::bb::4" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 16 } } with { dec_unsigned 32 8 } }

     /* STATEMENT main::bb::5
      *   store i32 7, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 5), align 4, !dbg !25 */
     { label 64 { lref 64 "main::bb::5" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 20 } } with { dec_unsigned 32 7 } }

     /* STATEMENT main::bb::6
      *   store i32 6, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 6), align 8, !dbg !26 */
     { label 64 { lref 64 "main::bb::6" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 24 } } with { dec_unsigned 32 6 } }

     /* STATEMENT main::bb::7
      *   store i32 5, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 7), align 4, !dbg !27 */
     { label 64 { lref 64 "main::bb::7" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 28 } } with { dec_unsigned 32 5 } }

     /* STATEMENT main::bb::8
      *   store i32 4, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 8), align 16, !dbg !28 */
     { label 64 { lref 64 "main::bb::8" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 32 } } with { dec_unsigned 32 4 } }

     /* STATEMENT main::bb::9
      *   store i32 3, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 9), align 4, !dbg !29 */
     { label 64 { lref 64 "main::bb::9" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 36 } } with { dec_unsigned 32 3 } }

     /* STATEMENT main::bb::10
      *   store i32 2, i32* getelementptr inbounds ([11 x i32]* @a, i64 0, i64 10), align 8, !dbg !30 */
     { label 64 { lref 64 "main::bb::10" } { dec_unsigned 64 0 } }
     { store { addr 64 { fref 64 "a" } { dec_unsigned 64 40 } } with { dec_unsigned 32 2 } }

     /* STATEMENT main::bb::11
      *   call void @insertsort(), !dbg !31 */
     { label 64 { lref 64 "main::bb::11" } { dec_unsigned 64 0 } }
     { call { label 64 { lref 64 "insertsort" } { dec_unsigned 64 0 } } result }

     /* STATEMENT main::bb::12
      *   ret i32 1, !dbg !32 */
     { label 64 { lref 64 "main::bb::12" } { dec_unsigned 64 0 } }
     { return { dec_unsigned 32 1 } }
    }
   }
  }
 }
}