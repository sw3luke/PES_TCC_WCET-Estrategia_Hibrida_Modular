Basic Block expint bb0
bb0;Line;23;"  nm1=n-1;                      /* arg=50 --> 49 */
"
bb0::6;Line;25;"  if(x>1)                       /* take this leg? */
"
Basic Block expint bb2
bb2;Line;27;"      b=x+n;
"
bb2::7;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb2::7:::1;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb2::7:::2;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb2::7:::3;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb2::7:::4;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
Basic Block expint bb5
bb5;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
Basic Block expint bb7
bb7;Line;34;"          a = -i*(nm1+i);
"
bb7::12;Line;37;"          c=b+a/c;
"
bb7::14;Line;38;"          del=c*d;
"
bb7::16;Line;39;"          h *= del;
"
bb7::19;Line;40;"          if (del < 10000)
"
bb7::5;Line;35;"          b += 2;
"
bb7::9;Line;36;"          d=10*(a*d+b);
"
Basic Block expint bb21
bb21;Line;42;"              ans=h*-x;
"
bb21::3;Line;43;"              return ans;
"
bb21::3:::1;Line;43;"              return ans;
"
Basic Block expint bb24
bb24;Line;45;"        }
"
Basic Block expint bb25
bb25;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2:::1;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2:::2;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2:::3;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2:::4;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
bb25::2:::5;Line;32;"      for (i=1;i<=100;i++)      /* MAXIT is 100 */
"
Basic Block expint bb27
bb27;Line;46;"    }
"
bb27::0:::1;Line;46;"    }
"
Basic Block expint bb28
bb28;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::1:::else;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::1:::else:::1;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::1:::join;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::1:::then;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::1:::then:::1;Line;51;"      ans = nm1 != 0 ? 2 : 1000;
"
bb28::5;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb28::5:::1;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb28::5:::2;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
Basic Block expint bb31
bb31;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
Basic Block expint bb33
bb33;Line;55;"          fact *= -x/i;
"
bb33::6;Line;56;"          if (i != nm1)         /* depends on parameter n */
"
Basic Block expint bb39
bb39;Line;57;"            del = -fact/(i-nm1);
"
bb39::5;Line;57;"            del = -fact/(i-nm1);
"
bb39::5:::1;Line;57;"            del = -fact/(i-nm1);
"
Basic Block expint bb44
bb44;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
bb44::2:::1;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
Basic Block expint bb45
bb45;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
Basic Block expint bb47
bb47;Line;62;"                psi += ii + nm1;
"
Basic Block expint bb48
bb48;Line;62;"                psi += ii + nm1;
"
bb48::3;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
bb48::5;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
bb48::5:::1;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
bb48::5:::2;Line;61;"              for (ii=1;ii<=nm1;ii++) /*  */
"
Basic Block expint bb53
bb53;Line;63;"              del=psi+fact*foo(x);
"
bb53::2;Line;63;"              del=psi+fact*foo(x);
"
Basic Block expint bb57
bb57;Line;66;"        }
"
Basic Block expint bb58
bb58;Line;65;"          ans += del;
"
bb58::1;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb58::3;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb58::3:::1;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb58::3:::2;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
bb58::3:::3;Line;53;"      for (i=1;i<=100;i++)      /* MAXIT */
"
Basic Block expint bb62
bb62;Line;69;"  return ans;
"
Basic Block expint bb63
bb63;Line;70;"}
"
Basic Block foo bb0
bb0;Line;13;"  return x*x+(8*x)<<4-x;
"
Basic Block main bb0
bb0;Line;5;"  expint(50,1);
"
bb0::1;Line;8;"  return 0;
"
