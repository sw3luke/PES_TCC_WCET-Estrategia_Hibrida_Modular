Basic Block foo bb0
bb0;Line;444;"  for(i=0; i<5; i++)
"
Basic Block foo bb1
bb1;Line;444;"  for(i=0; i<5; i++)
"
Basic Block foo bb2
bb2;Line;445;"    for(j=0 ; j<5 ; j++)
"
Basic Block foo bb3
bb3;Line;445;"    for(j=0 ; j<5 ; j++)
"
Basic Block foo bb5
bb5;Line;446;"      for(k=0 ; k<5 ; k++)
"
Basic Block foo bb6
bb6;Line;446;"      for(k=0 ; k<5 ; k++)
"
Basic Block foo bb8
bb8;Line;447;"        for(l=0 ; l<5 ; l++)
"
Basic Block foo bb9
bb9;Line;447;"        for(l=0 ; l<5 ; l++)
"
Basic Block foo bb11
bb11;Line;449;"          if( keys[i][j][k][l] == x )
"
bb11::7;Line;449;"          if( keys[i][j][k][l] == x )
"
Basic Block foo bb19
bb19;Line;451;"              return answer[i][j][k][l] + keys[i][j][k][l];
"
bb19::11;Line;451;"              return answer[i][j][k][l] + keys[i][j][k][l];
"
bb19::12;Line;451;"              return answer[i][j][k][l] + keys[i][j][k][l];
"
bb19::13;Line;451;"              return answer[i][j][k][l] + keys[i][j][k][l];
"
bb19::13:::1;Line;451;"              return answer[i][j][k][l] + keys[i][j][k][l];
"
Basic Block foo bb33
bb33;Line;453;"        }
"
Basic Block foo bb34
bb34;Line;447;"        for(l=0 ; l<5 ; l++)
"
bb34::2;Line;447;"        for(l=0 ; l<5 ; l++)
"
bb34::2:::1;Line;447;"        for(l=0 ; l<5 ; l++)
"
Basic Block foo bb36
bb36;Line;453;"        }
"
Basic Block foo bb37
bb37;Line;446;"      for(k=0 ; k<5 ; k++)
"
bb37::2;Line;446;"      for(k=0 ; k<5 ; k++)
"
bb37::2:::1;Line;446;"      for(k=0 ; k<5 ; k++)
"
Basic Block foo bb39
bb39;Line;453;"        }
"
Basic Block foo bb40
bb40;Line;445;"    for(j=0 ; j<5 ; j++)
"
bb40::2;Line;445;"    for(j=0 ; j<5 ; j++)
"
bb40::2:::1;Line;445;"    for(j=0 ; j<5 ; j++)
"
Basic Block foo bb42
bb42;Line;453;"        }
"
Basic Block foo bb43
bb43;Line;444;"  for(i=0; i<5; i++)
"
bb43::2;Line;444;"  for(i=0; i<5; i++)
"
bb43::2:::1;Line;444;"  for(i=0; i<5; i++)
"
Basic Block foo bb45
bb45;Line;454;"  return -1;
"
Basic Block foo bb46
bb46;Line;455;"}
"
Basic Block main bb0
bb0;Line;460;"  foo(400);
"
bb0::1;Line;461;"  return 0;
"
